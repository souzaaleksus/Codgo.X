//
// Created by the DataSnap proxy generator.
// 07/09/2024 10:19:25
//

unit ClientClassesUnit;

interface

uses System.JSON, Datasnap.DSProxyRest, Datasnap.DSClientRest, Data.DBXCommon, Data.DBXClient, Data.DBXDataSnap, Data.DBXJSON, Datasnap.DSProxy, System.Classes, System.SysUtils, Data.DB, Data.SqlExpr, Data.DBXDBReaders, Data.DBXCDSReaders, Data.FireDACJSONReflect, Data.DBXJSONReflect;

type

  IDSRestCachedTFDJSONDataSets = interface;

  TServerMethodsClient = class(TDSAdminRestClient)
  private
    FDataModuleCreateCommand: TDSRestCommand;
    FGetPessoaCommand: TDSRestCommand;
    FGetPessoaCommand_Cache: TDSRestCommand;
    FGetEnderecoCommand: TDSRestCommand;
    FGetEnderecoCommand_Cache: TDSRestCommand;
    FGetEnderecoIntegracaoCommand: TDSRestCommand;
    FGetEnderecoIntegracaoCommand_Cache: TDSRestCommand;
  public
    constructor Create(ARestConnection: TDSRestConnection); overload;
    constructor Create(ARestConnection: TDSRestConnection; AInstanceOwner: Boolean); overload;
    destructor Destroy; override;
    procedure DataModuleCreate(Sender: TObject);
    function GetPessoa(const ARequestFilter: string = ''): TFDJSONDataSets;
    function GetPessoa_Cache(const ARequestFilter: string = ''): IDSRestCachedTFDJSONDataSets;
    function GetEndereco(Aidpessoa: Integer; const ARequestFilter: string = ''): TFDJSONDataSets;
    function GetEndereco_Cache(Aidpessoa: Integer; const ARequestFilter: string = ''): IDSRestCachedTFDJSONDataSets;
    function GetEnderecoIntegracao(Aidendereco: Integer; const ARequestFilter: string = ''): TFDJSONDataSets;
    function GetEnderecoIntegracao_Cache(Aidendereco: Integer; const ARequestFilter: string = ''): IDSRestCachedTFDJSONDataSets;
  end;

  IDSRestCachedTFDJSONDataSets = interface(IDSRestCachedObject<TFDJSONDataSets>)
  end;

  TDSRestCachedTFDJSONDataSets = class(TDSRestCachedObject<TFDJSONDataSets>, IDSRestCachedTFDJSONDataSets, IDSRestCachedCommand)
  end;

const
  TServerMethods_DataModuleCreate: array [0..0] of TDSRestParameterMetaData =
  (
    (Name: 'Sender'; Direction: 1; DBXType: 37; TypeName: 'TObject')
  );

  TServerMethods_GetPessoa: array [0..0] of TDSRestParameterMetaData =
  (
    (Name: ''; Direction: 4; DBXType: 37; TypeName: 'TFDJSONDataSets')
  );

  TServerMethods_GetPessoa_Cache: array [0..0] of TDSRestParameterMetaData =
  (
    (Name: ''; Direction: 4; DBXType: 26; TypeName: 'String')
  );

  TServerMethods_GetEndereco: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'Aidpessoa'; Direction: 1; DBXType: 6; TypeName: 'Integer'),
    (Name: ''; Direction: 4; DBXType: 37; TypeName: 'TFDJSONDataSets')
  );

  TServerMethods_GetEndereco_Cache: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'Aidpessoa'; Direction: 1; DBXType: 6; TypeName: 'Integer'),
    (Name: ''; Direction: 4; DBXType: 26; TypeName: 'String')
  );

  TServerMethods_GetEnderecoIntegracao: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'Aidendereco'; Direction: 1; DBXType: 6; TypeName: 'Integer'),
    (Name: ''; Direction: 4; DBXType: 37; TypeName: 'TFDJSONDataSets')
  );

  TServerMethods_GetEnderecoIntegracao_Cache: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'Aidendereco'; Direction: 1; DBXType: 6; TypeName: 'Integer'),
    (Name: ''; Direction: 4; DBXType: 26; TypeName: 'String')
  );

implementation

procedure TServerMethodsClient.DataModuleCreate(Sender: TObject);
begin
  if FDataModuleCreateCommand = nil then
  begin
    FDataModuleCreateCommand := FConnection.CreateCommand;
    FDataModuleCreateCommand.RequestType := 'POST';
    FDataModuleCreateCommand.Text := 'TServerMethods."DataModuleCreate"';
    FDataModuleCreateCommand.Prepare(TServerMethods_DataModuleCreate);
  end;
  if not Assigned(Sender) then
    FDataModuleCreateCommand.Parameters[0].Value.SetNull
  else
  begin
    FMarshal := TDSRestCommand(FDataModuleCreateCommand.Parameters[0].ConnectionHandler).GetJSONMarshaler;
    try
      FDataModuleCreateCommand.Parameters[0].Value.SetJSONValue(FMarshal.Marshal(Sender), True);
      if FInstanceOwner then
        Sender.Free
    finally
      FreeAndNil(FMarshal)
    end
    end;
  FDataModuleCreateCommand.Execute;
end;

function TServerMethodsClient.GetPessoa(const ARequestFilter: string): TFDJSONDataSets;
begin
  if FGetPessoaCommand = nil then
  begin
    FGetPessoaCommand := FConnection.CreateCommand;
    FGetPessoaCommand.RequestType := 'GET';
    FGetPessoaCommand.Text := 'TServerMethods.GetPessoa';
    FGetPessoaCommand.Prepare(TServerMethods_GetPessoa);
  end;
  FGetPessoaCommand.Execute(ARequestFilter);
  if not FGetPessoaCommand.Parameters[0].Value.IsNull then
  begin
    FUnMarshal := TDSRestCommand(FGetPessoaCommand.Parameters[0].ConnectionHandler).GetJSONUnMarshaler;
    try
      Result := TFDJSONDataSets(FUnMarshal.UnMarshal(FGetPessoaCommand.Parameters[0].Value.GetJSONValue(True)));
      if FInstanceOwner then
        FGetPessoaCommand.FreeOnExecute(Result);
    finally
      FreeAndNil(FUnMarshal)
    end
  end
  else
    Result := nil;
end;

function TServerMethodsClient.GetPessoa_Cache(const ARequestFilter: string): IDSRestCachedTFDJSONDataSets;
begin
  if FGetPessoaCommand_Cache = nil then
  begin
    FGetPessoaCommand_Cache := FConnection.CreateCommand;
    FGetPessoaCommand_Cache.RequestType := 'GET';
    FGetPessoaCommand_Cache.Text := 'TServerMethods.GetPessoa';
    FGetPessoaCommand_Cache.Prepare(TServerMethods_GetPessoa_Cache);
  end;
  FGetPessoaCommand_Cache.ExecuteCache(ARequestFilter);
  Result := TDSRestCachedTFDJSONDataSets.Create(FGetPessoaCommand_Cache.Parameters[0].Value.GetString);
end;

function TServerMethodsClient.GetEndereco(Aidpessoa: Integer; const ARequestFilter: string): TFDJSONDataSets;
begin
  if FGetEnderecoCommand = nil then
  begin
    FGetEnderecoCommand := FConnection.CreateCommand;
    FGetEnderecoCommand.RequestType := 'GET';
    FGetEnderecoCommand.Text := 'TServerMethods.GetEndereco';
    FGetEnderecoCommand.Prepare(TServerMethods_GetEndereco);
  end;
  FGetEnderecoCommand.Parameters[0].Value.SetInt32(Aidpessoa);
  FGetEnderecoCommand.Execute(ARequestFilter);
  if not FGetEnderecoCommand.Parameters[1].Value.IsNull then
  begin
    FUnMarshal := TDSRestCommand(FGetEnderecoCommand.Parameters[1].ConnectionHandler).GetJSONUnMarshaler;
    try
      Result := TFDJSONDataSets(FUnMarshal.UnMarshal(FGetEnderecoCommand.Parameters[1].Value.GetJSONValue(True)));
      if FInstanceOwner then
        FGetEnderecoCommand.FreeOnExecute(Result);
    finally
      FreeAndNil(FUnMarshal)
    end
  end
  else
    Result := nil;
end;

function TServerMethodsClient.GetEndereco_Cache(Aidpessoa: Integer; const ARequestFilter: string): IDSRestCachedTFDJSONDataSets;
begin
  if FGetEnderecoCommand_Cache = nil then
  begin
    FGetEnderecoCommand_Cache := FConnection.CreateCommand;
    FGetEnderecoCommand_Cache.RequestType := 'GET';
    FGetEnderecoCommand_Cache.Text := 'TServerMethods.GetEndereco';
    FGetEnderecoCommand_Cache.Prepare(TServerMethods_GetEndereco_Cache);
  end;
  FGetEnderecoCommand_Cache.Parameters[0].Value.SetInt32(Aidpessoa);
  FGetEnderecoCommand_Cache.ExecuteCache(ARequestFilter);
  Result := TDSRestCachedTFDJSONDataSets.Create(FGetEnderecoCommand_Cache.Parameters[1].Value.GetString);
end;

function TServerMethodsClient.GetEnderecoIntegracao(Aidendereco: Integer; const ARequestFilter: string): TFDJSONDataSets;
begin
  if FGetEnderecoIntegracaoCommand = nil then
  begin
    FGetEnderecoIntegracaoCommand := FConnection.CreateCommand;
    FGetEnderecoIntegracaoCommand.RequestType := 'GET';
    FGetEnderecoIntegracaoCommand.Text := 'TServerMethods.GetEnderecoIntegracao';
    FGetEnderecoIntegracaoCommand.Prepare(TServerMethods_GetEnderecoIntegracao);
  end;
  FGetEnderecoIntegracaoCommand.Parameters[0].Value.SetInt32(Aidendereco);
  FGetEnderecoIntegracaoCommand.Execute(ARequestFilter);
  if not FGetEnderecoIntegracaoCommand.Parameters[1].Value.IsNull then
  begin
    FUnMarshal := TDSRestCommand(FGetEnderecoIntegracaoCommand.Parameters[1].ConnectionHandler).GetJSONUnMarshaler;
    try
      Result := TFDJSONDataSets(FUnMarshal.UnMarshal(FGetEnderecoIntegracaoCommand.Parameters[1].Value.GetJSONValue(True)));
      if FInstanceOwner then
        FGetEnderecoIntegracaoCommand.FreeOnExecute(Result);
    finally
      FreeAndNil(FUnMarshal)
    end
  end
  else
    Result := nil;
end;

function TServerMethodsClient.GetEnderecoIntegracao_Cache(Aidendereco: Integer; const ARequestFilter: string): IDSRestCachedTFDJSONDataSets;
begin
  if FGetEnderecoIntegracaoCommand_Cache = nil then
  begin
    FGetEnderecoIntegracaoCommand_Cache := FConnection.CreateCommand;
    FGetEnderecoIntegracaoCommand_Cache.RequestType := 'GET';
    FGetEnderecoIntegracaoCommand_Cache.Text := 'TServerMethods.GetEnderecoIntegracao';
    FGetEnderecoIntegracaoCommand_Cache.Prepare(TServerMethods_GetEnderecoIntegracao_Cache);
  end;
  FGetEnderecoIntegracaoCommand_Cache.Parameters[0].Value.SetInt32(Aidendereco);
  FGetEnderecoIntegracaoCommand_Cache.ExecuteCache(ARequestFilter);
  Result := TDSRestCachedTFDJSONDataSets.Create(FGetEnderecoIntegracaoCommand_Cache.Parameters[1].Value.GetString);
end;

constructor TServerMethodsClient.Create(ARestConnection: TDSRestConnection);
begin
  inherited Create(ARestConnection);
end;

constructor TServerMethodsClient.Create(ARestConnection: TDSRestConnection; AInstanceOwner: Boolean);
begin
  inherited Create(ARestConnection, AInstanceOwner);
end;

destructor TServerMethodsClient.Destroy;
begin
  FDataModuleCreateCommand.DisposeOf;
  FGetPessoaCommand.DisposeOf;
  FGetPessoaCommand_Cache.DisposeOf;
  FGetEnderecoCommand.DisposeOf;
  FGetEnderecoCommand_Cache.DisposeOf;
  FGetEnderecoIntegracaoCommand.DisposeOf;
  FGetEnderecoIntegracaoCommand_Cache.DisposeOf;
  inherited;
end;

end.

